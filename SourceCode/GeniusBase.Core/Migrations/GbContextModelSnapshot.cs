// <auto-generated />
using System;
using GeniusBase.Core.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GeniusBase.Core.Migrations
{
    [DbContext(typeof(GbContext))]
    partial class GbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("post")
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GeniusBase.Core.Database.Entity.Post.Article", b =>
                {
                    b.Property<int>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ArchivedDate");

                    b.Property<int?>("ArticleTagId");

                    b.Property<int>("CategoryId");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("FirstPublishedDate");

                    b.Property<bool>("IsDraft");

                    b.Property<DateTime>("Modified");

                    b.Property<int>("ModifiedBy");

                    b.Property<string>("PlainContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("UrlIdentifier")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("Views");

                    b.HasKey("ArticleId");

                    b.HasIndex("ArticleTagId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UrlIdentifier")
                        .IsUnique();

                    b.ToTable("Article");
                });

            modelBuilder.Entity("GeniusBase.Core.Database.Entity.Post.ArticleHistory", b =>
                {
                    b.Property<int>("ArticleHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticleId");

                    b.Property<int>("CategoryId");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created");

                    b.Property<int>("CreatedBy");

                    b.Property<bool>("IsDraft");

                    b.Property<DateTime>("Modified");

                    b.Property<int>("ModifiedBy");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("ArticleHistoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ArticleHistory");
                });

            modelBuilder.Entity("GeniusBase.Core.Database.Entity.Post.ArticleTag", b =>
                {
                    b.Property<int>("ArticleTagId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticleId");

                    b.Property<DateTime>("Created");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("Modified");

                    b.Property<int>("ModifiedBy");

                    b.Property<int>("TagId");

                    b.HasKey("ArticleTagId");

                    b.HasIndex("ArticleId");

                    b.HasIndex("TagId");

                    b.ToTable("ArticleTag");
                });

            modelBuilder.Entity("GeniusBase.Core.Database.Entity.Post.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("CategoryShortName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("Created");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("Modified");

                    b.Property<int>("ModifiedBy");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("GeniusBase.Core.Database.Entity.Post.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArticleHistoryId");

                    b.Property<int?>("ArticleId");

                    b.Property<DateTime>("Created");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("Modified");

                    b.Property<int>("ModifiedBy");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("TagShortName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("TagId");

                    b.HasIndex("ArticleHistoryId");

                    b.HasIndex("ArticleId");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("GeniusBase.Core.Database.Entity.Post.Article", b =>
                {
                    b.HasOne("GeniusBase.Core.Database.Entity.Post.ArticleTag")
                        .WithMany("Articles")
                        .HasForeignKey("ArticleTagId");

                    b.HasOne("GeniusBase.Core.Database.Entity.Post.Category", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GeniusBase.Core.Database.Entity.Post.ArticleHistory", b =>
                {
                    b.HasOne("GeniusBase.Core.Database.Entity.Post.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GeniusBase.Core.Database.Entity.Post.ArticleTag", b =>
                {
                    b.HasOne("GeniusBase.Core.Database.Entity.Post.Article", "Category")
                        .WithMany()
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GeniusBase.Core.Database.Entity.Post.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GeniusBase.Core.Database.Entity.Post.Tag", b =>
                {
                    b.HasOne("GeniusBase.Core.Database.Entity.Post.ArticleHistory")
                        .WithMany("Tags")
                        .HasForeignKey("ArticleHistoryId");

                    b.HasOne("GeniusBase.Core.Database.Entity.Post.Article")
                        .WithMany("Tags")
                        .HasForeignKey("ArticleId");
                });
#pragma warning restore 612, 618
        }
    }
}
